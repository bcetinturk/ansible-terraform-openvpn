- hosts: all
  become: true
  tasks:
    - name: Install Openvpn package
      ansible.builtin.apt:
        name: openvpn
        update_cache: true

    - name: Generate private key for Certificate Authority
      community.crypto.openssl_privatekey:
        path: ca.key

    - name: Generate CSR to specify CA subject
      community.crypto.openssl_csr:
        path: ca.csr
        common_name: openvpn_ca
        privatekey_path: ca.key

    - name: Create CA certificate
      community.crypto.x509_certificate:
        path: ca.crt
        privatekey_path: ca.key
        provider: selfsigned
        csr_path: ca.csr
        # force: true # remove later
        # backup: true

    - name: Create private key for openvpn server
      community.crypto.openssl_privatekey:
        path: server.key

    - name: Generate CSR to specify server subject
      community.crypto.openssl_csr:
        path: server.csr
        common_name: openvpn_server
        privatekey_path: server.key

    - name: Sign server csr
      community.crypto.x509_certificate:
        path: server.crt
        privatekey_path: server.key
        provider: ownca
        ownca_path: ca.crt
        ownca_privatekey_path: ca.key
        csr_path: server.csr

    - name: Generate pre-shared key to use with tls-crypt directive
      ansible.builtin.command:
        cmd: openvpn --genkey --secret ta.key
        creates: ta.key

    - name: Copy certificates and server's key to openvpn/server directory
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/openvpn/server
        remote_src: true
        mode: preserve
      loop:
        - ta.key
        - server.key
        - server.crt
        - ca.crt

    - name: Create directory for client configuration files
      ansible.builtin.file:
        path: client-configs/keys
        state: directory
        recurse: true
        mode: 0700

    - name: Create private key for a client
      community.crypto.openssl_privatekey:
        path: client-configs/keys/client1.key

    - name: Generate CSR to specify client subject
      community.crypto.openssl_csr:
        path: client1.csr
        common_name: openvpn_client1
        privatekey_path: client-configs/keys/client1.key

    - name: Sign client1 csr
      community.crypto.x509_certificate:
        path: client-configs/keys/client1.crt
        privatekey_path: client-configs/keys/client1.key
        provider: ownca
        ownca_path: ca.crt
        ownca_privatekey_path: ca.key
        csr_path: client1.csr

    - name: Copy ta.key to client-configs/keys/
      ansible.builtin.copy:
        src: ta.key
        dest: client-configs/keys/ta.key
        remote_src: true
        mode: preserve

    - name: Copy server.conf
      ansible.builtin.copy:
        src: server.conf
        dest: /etc/openvpn/server/server.conf
        mode: 0755

    - name: Enable IP forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true

    - name: Get public network interface
      ansible.builtin.shell:
        cmd: "ip route list default | awk '{ print $5 }'"
      changed_when: false
      register: public_interface

    - name: Add before rules for ufw
      ansible.builtin.blockinfile:
        path: /etc/ufw/before.rules
        insertbefore: "^# Don't delete these required lines, otherwise there will be errors"
        block: |
          # START OPENVPN RULES
          # NAT table rules
          *nat
          :POSTROUTING ACCEPT [0:0]
          -A POSTROUTING -s 10.8.0.0/8 -o {{ public_interface.stdout_lines }} -j MASQUERADE
          COMMIT
          # END OPENVPN RULES

    - name: Enable forwarding for ufw
      ansible.builtin.lineinfile:
        path: /etc/default/ufw
        search_string: 'DEFAULT_FORWARD_POLICY="DROP"'
        line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'

    - name: Enable port 1194 and 22 traffic
      community.general.ufw:
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        rule: allow
      loop:
        - port: 1194
          proto: udp
        - port: 22
          proto: tcp

    - name: Enable ufw
      community.general.ufw:
        state: enabled

    - name: Start Openvpn service
      ansible.builtin.service:
        name: openvpn-server@server
        state: started
        enabled: true

    - name: Create directory to store .ovpn files
      ansible.builtin.file:
        name: client-configs/files
        state: directory

    - name: Read contents
      ansible.builtin.slurp:
        src: "{{ item }}"
      loop:
        # This order is important
        - ca.crt
        - client-configs/keys/client1.crt
        - client-configs/keys/client1.key
        - ta.key
      register: files

    - name: Copy client file
      ansible.builtin.template:
        src: client.conf.j2
        dest: client-configs/files/client1.ovpn
        mode: 0755
      vars:
        server_ip: "{{ ansible_host }}"
        ca: "{{ files.results[0].content | b64decode }}"
        cert: "{{ files.results[1].content | b64decode }}"
        key: "{{ files.results[2].content | b64decode }}"
        tls_crypt: "{{ files.results[3].content | b64decode }}"
